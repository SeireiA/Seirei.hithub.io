<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java-对象训练_1</title>
      <link href="/2022/10/09/java-dui-xiang-xun-lian-1/"/>
      <url>/2022/10/09/java-dui-xiang-xun-lian-1/</url>
      
        <content type="html"><![CDATA[<h2 id="新建测试类-wenzi-gedou"><a href="#新建测试类-wenzi-gedou" class="headerlink" title="新建测试类 wenzi_gedou"></a>新建测试类 wenzi_gedou</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> wenzi_gedou <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        gedou_renwu u1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">gedou_renwu</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        gedou_renwu u2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">gedou_renwu</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Random</span> r<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>u1<span class="token punctuation">.</span><span class="token function">getHp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>u2<span class="token punctuation">.</span><span class="token function">getHp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> hurt <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            u2<span class="token punctuation">.</span><span class="token function">setHp</span><span class="token punctuation">(</span>hurt<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>u2<span class="token punctuation">.</span><span class="token function">getHp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"张三给李四造成了"</span><span class="token operator">+</span>hurt<span class="token operator">+</span><span class="token string">"点伤害"</span><span class="token operator">+</span><span class="token string">",李四还剩下"</span><span class="token operator">+</span>u2<span class="token punctuation">.</span><span class="token function">getHp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"点血量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            hurt <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            u1<span class="token punctuation">.</span><span class="token function">setHp</span><span class="token punctuation">(</span>hurt<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>u1<span class="token punctuation">.</span><span class="token function">getHp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"李四给张三造成了"</span><span class="token operator">+</span>hurt<span class="token operator">+</span><span class="token string">"点伤害"</span><span class="token operator">+</span><span class="token string">",张三还剩下"</span><span class="token operator">+</span>u1<span class="token punctuation">.</span><span class="token function">getHp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"点血量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>u1<span class="token punctuation">.</span><span class="token function">getHp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"李四K.O了张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u2<span class="token punctuation">.</span><span class="token function">getHp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"张三K.O了李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"出错"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="新建java-bean类-gedou-renwu"><a href="#新建java-bean类-gedou-renwu" class="headerlink" title="新建java bean类 gedou_renwu"></a>新建java bean类 gedou_renwu</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> gedou_renwu <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> hp<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">gedou_renwu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">gedou_renwu</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> hp<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> hp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 获取     * @return name     */</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 设置     * @param name     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 获取     * @return hp     */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getHp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 设置     * @param hp     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setHp</span><span class="token punctuation">(</span><span class="token keyword">int</span> hp<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">-=</span> hp<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Java -学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我回来啦</title>
      <link href="/2022/10/08/wo-you-hui-lai-la/"/>
      <url>/2022/10/08/wo-you-hui-lai-la/</url>
      
        <content type="html"><![CDATA[<h2 id="我又回来啦"><a href="#我又回来啦" class="headerlink" title="我又回来啦"></a>我又回来啦</h2><p>从初一看开始的磕磕绊绊,到大二开始平稳坦然,对于编程来说,是我为二的使然</p><p>这个网站也从刚开始<strong>静态</strong>到后来的<strong>动态博客</strong>,再到如今的基于HEXO的Github Pages</p><p>是没有钱就不行的VPS,也是没有一直维护意识的我</p><p>7年,换了三个主域名,VPS换过无数.但我还是我,那个热爱编程分享知识和日常碎片的我.</p><p>这次想起来,是因为我是去了我觉得非常重要的人,本想写个回忆分别记,奈何别的平台怎么写都不如愿.</p><p>最后,还是用自己网站吧,Github信得过,还不花钱,它不倒,我不倒,它倒了,我跑路换别的啊😬</p><h2 id="目前的打算"><a href="#目前的打算" class="headerlink" title="目前的打算"></a>目前的打算</h2><ul><li>下一篇写写基于Github搭建Hexo</li><li>22-01-02前写好回忆录</li><li>时不时分享下学习编程过程中遇到的弯路</li></ul><p>文笔不行,写这么点东西就开始文思枯竭了😢 以后,为了更好的我,为了我10年前立下的Flags,一步一步慢慢实现,不是让别人看我,是为了我自己舒服.</p>]]></content>
      
      
      <categories>
          
          <category> 开始 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -回忆 -未来 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章编辑默认属性</title>
      <link href="/2022/10/08/ni-hao-shi-jie/"/>
      <url>/2022/10/08/ni-hao-shi-jie/</url>
      
        <content type="html"><![CDATA[<blockquote><p>title: 标题<br>date: 时间<br>author: SeireiYa<br>img: 文章特征图<br>top: 推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</p><p>hide: 隐藏文章，如果hide值为true，则文章不会在首页显示</p><p>cover: 表示该文章是否需要加入到首页轮播封面中</p><p>coverImg: 表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</p><p>password: 文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项</p><p>toc: 是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</p><p>mathjax: 是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</p><p>summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</p><p>categories: 文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</p><p>keywords:文章标题 文章关键字，SEO 时需要<br>reprintPolicy: 文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</p><p>tags:    文章标签，一篇文章可以多个标签</p><ul><li><p>Typora</p></li><li><p>Markdown</p></li></ul></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
